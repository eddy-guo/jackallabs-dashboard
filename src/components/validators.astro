---
import {
  Chain,
  getCurrentBlock,
  getValidators,
} from "../components/chain.astro";

const jackalChain: Chain = {
  title: "jackal",
  api: "https://api.jackalprotocol.com",
  address: "",
};

// improved get functions (lazy fuck)
async function getValidatorsNew(chain: Chain) {
  const response = await fetch(
    `${chain.api}/cosmos/staking/v1beta1/validators?status=BOND_STATUS_BONDED`
  ).then((res) => res.json());
  return response;
}

// // if json in str is printed, good - if error 500, bad
// async function getValidatorsText(chain: Chain) {
//   const response = await fetch(
//     `${chain.api}/cosmos/staking/v1beta1/validators?status=BOND_STATUS_BONDED`
//   ).then((res) => res.text()).then(text => console.log(text));
//   return response;
// }
// var textversion = await getValidatorsText(jackalChain)

const jackalHeight = await getCurrentBlock(jackalChain);
var jackalValidators = await getValidatorsNew(jackalChain);
var maxValidators = jackalValidators["pagination"]["total"];
// sort jackalValidators["validators"] by decreasing order
jackalValidators["validators"].sort((a: any, b: any) => parseFloat(b.tokens) - parseFloat(a.tokens));
---

<p>Number of validators: {maxValidators}</p>
<p>Current Jackal Block Height: {jackalHeight}</p>
<div class="validators">
  <table>
    <tr>
      <th>Rank</th>
      <th>Validator Name</th>
      <th>Validator Address</th>
      <th class="right-text">Voting Power</th>
      <th class="right-text">Commission Rate</th>
    </tr>
    {
      jackalValidators["validators"].map((value: any, index: any) => (
        <tr>
          <td>{index + 1}</td>
          <td>
            <a href={value["description"]["website"]} target="_blank">
              {value["description"]["moniker"]}
            </a>
          </td>
          <td>{value["operator_address"]}</td>
          <td class="right-text">{Math.round(value["tokens"] / 1000000).toLocaleString()} JKL</td>
          <td class="right-text">{value["commission"]["commission_rates"]["rate"] * 100}%</td>
        </tr>
      ))
    }
  </table>
</div>

<style>
  .validators {
    background: white;
    display: flex;
  }
  table {
    width: 100%;
    flex-grow: 1;
    text-align: left;
    border-spacing: 0px;
  }
  th,
  td {
    padding: 10px 20px;
    border-bottom: 1px solid #d3d3d3;
  }
  .right-text {
    text-align: right;
  }
  a, a:visited {
    text-decoration: none;
    color: black;
  }
  a:hover {
    text-decoration: underline;
  }
</style>
