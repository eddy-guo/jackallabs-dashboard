---
import {
  Chain,
  getCurrentBlock,
} from "../components/chain.astro";

const jackalChain: Chain = {
  title: "jackal",
  api: "https://api.jackalprotocol.com",
  address: "",
  image: ""
};

// improved get functions (lazy fuck)
async function getJackalValidators(chain: Chain) {
  const response = await fetch(`${chain.api}/cosmos/staking/v1beta1/validators?status=BOND_STATUS_BONDED`);
  const data = await response.json();
  return data;
}

const jackalHeight = await getCurrentBlock(jackalChain);
var jackalValidators = await getJackalValidators(jackalChain);
var maxValidators = jackalValidators["pagination"]["total"];
// sort jackalValidators["validators"] by decreasing order
jackalValidators["validators"].sort((a: any, b: any) => parseFloat(b.tokens) - parseFloat(a.tokens));
---
<div class="validators-header">
  <span>Number of validators: <span class='validators-numbers'>{maxValidators}</span></span>
  <span>Current Jackal Block Height: <span class='validators-numbers'>{jackalHeight}</span></span>
</div>

<div class="validators">
  <table>
    <tr class="column-title">
      <th>RANK</th>
      <th>VALIDATOR NAME</th>
      <th>VALIDATOR ADDRESS</th>
      <th class="right-text">VOTING POWER</th>
      <th class="right-text">COMMISSION RATE</th>
    </tr>
    {
      jackalValidators["validators"].map((value: any, index: any) => (
        <tr>
          <td>{index + 1}</td>
          <td>
            <a href={value["description"]["website"]} target="_blank">
              {value["description"]["moniker"]}
            </a>
          </td>
          <td>{value["operator_address"]}</td>
          <td class="right-text">{Math.round(value["tokens"] / 1000000).toLocaleString()} JKL</td>
          <td class="right-text">{(value["commission"]["commission_rates"]["rate"] * 100).toLocaleString()}%</td>
        </tr>
      ))
    }
  </table>
</div>

<style>
  .validators-header {
    background: white;
    padding: 10px 20px;
    text-align: left;
    font-family: Monospace;
    font-size: 15px;
  }
  .validators-header > span {
    padding-right: 50px;
  }
  .validators-numbers {
    font-weight: bold;
  }
  .validators {
    background: white;
    display: flex;
  }
  .column-title {
    font-family: Courier;
    font-size: 15px;
  }
  .column-title > th {
    border-top: 1px solid #d3d3d3;
  }
  table {
    width: 100%;
    flex-grow: 1;
    text-align: left;
    border-spacing: 0px;
  }
  th,
  td {
    padding: 10px 20px;
    border-bottom: 1px solid #d3d3d3;
  }
  .right-text {
    text-align: right;
  }
  /* might need more specific in the future if links are diff styles */
  a, a:visited {
    text-decoration: none;
    color: black;
    text-decoration-line: underline;
    text-decoration-style: dashed;
    text-underline-offset: 0.15em;
    text-decoration-thickness: 0.05em;
  }
  a:hover {
    color: rgb(160, 160, 160);
  }
</style>
