---
const tokenInfo = await fetch(
  "https://api.dexscreener.com/latest/dex/search?q=jkl"
).then((res) => res.json());

interface tokenInfo {
  title: string;
  time: string;
}

const five_min: tokenInfo = {
  title: "5M",
  time: "m5",
};

const one_hour: tokenInfo = {
  title: "1HR",
  time: "h1",
};

const six_hour: tokenInfo = {
  title: "6HR",
  time: "h6",
};

const twentyfour_hour: tokenInfo = {
  title: "24HR",
  time: "h24",
};

const tokenInfoList = [five_min, one_hour, six_hour, twentyfour_hour];

var price = "";
function changePriceColor(num: any) {
  num == 0
    ? (price = "zero")
    : num > 0
    ? (price = "positive")
    : num < 0
    ? (price = "negative")
    : console.log("Price change is not a number.");
}
---

<script>
  var fiveminID = document.getElementById("5M");
  var onehrID = document.getElementById("1HR");
  var sixhrID = document.getElementById("6HR");
  var twentyfourhrID = document.getElementById("24HR");

  fiveminID.style.display =
    onehrID.style.display =
    sixhrID.style.display =
      "none";
  twentyfourhrID.style.display = "block";

  function toggleFiveMin() {
    if (fiveminID.style.display == "none") {
      fiveminID.style.display = "block";
      onehrID.style.display =
        sixhrID.style.display =
        twentyfourhrID.style.display =
          "none";
    }
  }
  function toggleOneHour() {
    if (onehrID.style.display == "none") {
      onehrID.style.display = "block";
      fiveminID.style.display =
        sixhrID.style.display =
        twentyfourhrID.style.display =
          "none";
    }
  }
  function toggleSixHour() {
    if (sixhrID.style.display == "none") {
      sixhrID.style.display = "block";
      fiveminID.style.display =
        onehrID.style.display =
        twentyfourhrID.style.display =
          "none";
    }
  }
  function toggleTwentyFourHour() {
    if (twentyfourhrID.style.display == "none") {
      twentyfourhrID.style.display = "block";
      fiveminID.style.display =
        onehrID.style.display =
        sixhrID.style.display =
          "none";
    }
  }

  document.getElementById("5Mbutton").addEventListener("click", toggleFiveMin);
  document.getElementById("1HRbutton").addEventListener("click", toggleOneHour);
  document.getElementById("6HRbutton").addEventListener("click", toggleSixHour);
  document
    .getElementById("24HRbutton")
    .addEventListener("click", toggleTwentyFourHour);
</script>

<div class="token-info">
  <div class="price-info">
    <img src="/images/jkl.svg" alt="jkl-logo" />
    <div class="price-info-text">
      <p>
        USD Price: <span class="price-number"
          >${tokenInfo["pairs"][0]["priceUsd"]}</span
        >
      </p>
      <p>
        Native Price: <span class="price-number"
          >{tokenInfo["pairs"][0]["priceNative"]} OSMO</span
        >
      </p>
      <p>
        Liquidity: <span class="price-number"
          >${tokenInfo["pairs"][0]["liquidity"]["usd"].toLocaleString()}</span
        >
      </p>
    </div>
  </div>
  <div class="token-info-links">
    <p class="tidbit">
      Explore the Jackal chain on <a
        href="https://ping.pub/jackal"
        target="_blank">ping.pub</a
      >
    </p>
    <p class="tidbit">
      Buy and Sell JKL on <a
        href="https://frontier.osmosis.zone/"
        target="_blank">Osmosis Frontier</a
      >
    </p>
    <p class="tidbit">
      Live historical graph on <a
        href="https://dexscreener.com/osmosis/832"
        target="_blank">DEX Screener</a
      >
    </p>
    <p class="tidbit">
      Find us on <a
        href="https://www.coingecko.com/en/coins/jackal-protocol"
        target="_blank">CoinGecko</a
      >
    </p>
  </div>
  <div class="historical-info">
    <div class="buttons">
      <button id="5Mbutton">5M</button>
      <button id="1HRbutton">1HR</button>
      <button id="6HRbutton">6HR</button>
      <button id="24HRbutton">24HR</button>
    </div>
    {
      tokenInfoList.map((value: any) => (
        <>
          {
            <div id={value.title}>
              <h4>{value.title}</h4>
              <div class="tidbit">
                <p class="tidbit-title">Transactions</p>
                <div class="buy-sell">
                  <span class="buys">
                    Buys:{" "}
                    <span class="price-number">
                      {tokenInfo["pairs"][0]["txns"][value.time]["buys"]}
                    </span>
                  </span>
                  <span class="sells">
                    Sells:{" "}
                    <span class="price-number">
                      {tokenInfo["pairs"][0]["txns"][value.time]["sells"]}
                    </span>
                  </span>
                </div>
                <div>
                  <progress
                    value={tokenInfo["pairs"][0]["txns"][value.time]["buys"]}
                    max={
                      tokenInfo["pairs"][0]["txns"][value.time]["buys"] +
                      tokenInfo["pairs"][0]["txns"][value.time]["sells"]
                    }
                  />
                </div>
              </div>
              <div class="tidbit">
                <p class="tidbit-title">Overall Volume</p>
                <span class="price-number">
                  $
                  {tokenInfo["pairs"][0]["volume"][value.time].toLocaleString()}
                </span>
              </div>
              <div class="tidbit">
                <p class="tidbit-title">Price Change</p>
                {changePriceColor(
                  tokenInfo["pairs"][0]["priceChange"][value.time]
                )}
                <span class={price}>
                  <span class="price-number">
                    {tokenInfo["pairs"][0]["priceChange"][value.time]}%
                  </span>
                </span>
              </div>
            </div>
          }
        </>
      ))
    }
  </div>
  <!-- <div class="temp"></div> -->
</div>

<style>
  h4 {
    font-size: 20px;
  }
  a,
  a:visited {
    font-weight: 600;
    text-decoration: none;
    color: #6699d4;
    text-decoration-line: underline;
    text-decoration-style: dashed;
    text-underline-offset: 0.15em;
    text-decoration-thickness: 0.05em;
  }
  a:hover {
    filter: brightness(1.2);
  }
  .token-info {
    display: flex;
    flex-grow: 1;
    background-color: white;
    border: 1px solid #d3d3d3;
  }
  .price-info {
    display: flex;
  }
  .price-info-text {
    display: flex;
    flex-direction: column;
    justify-content: center;
  }
  .price-info-text > p:not(:last-child) {
    margin-bottom: 30px;
  }
  .token-info-links > p {
    flex-grow: 1;
  }
  .price-number {
    font-weight: bold;
  }
  .price-info,
  .token-info-links,
  .historical-info {
    padding: 40px 40px;
    display: flex;
    flex-grow: 1;
    flex-shrink: 1;
    border-right: 1px solid #d3d3d3;
  }
  .token-info-links,
  .historical-info {
    flex-direction: column;
  }
  img {
    padding-right: 20px;
    margin: auto 0px;
    width: 150px;
    height: 150px;
  }
  .historical-info {
    padding: 40px;
    border-right: 1px solid #d3d3d3;
  }
  progress {
    width: 100%;
    height: 10px;
    border: 0;
    border-radius: 50px;
  }
  progress::-webkit-progress-value {
    background-color: #47b000;
    border-radius: 100px 0px 0px 100px;
    border-right: 10px;
  }
  progress::-webkit-progress-bar {
    background-color: red;
    border-radius: 100px;
  }
  .tidbit {
    font-size: 18px;
    margin-bottom: 10px;
  }
  .tidbit-title {
    text-decoration: underline;
  }
  .buys {
    float: left;
  }
  .sells {
    float: right;
  }
  .temp {
    padding: 40px;
  }
  .positive {
    color: #47b000;
  }
  .negative {
    color: red;
  }
  .zero {
    color: black;
  }
</style>
