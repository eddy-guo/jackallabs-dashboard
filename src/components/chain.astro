---
export interface Chain {
  title: string;
  api: string;
  address: string;
}
const { title, api, address, image } = Astro.props;

// Chain object
const validatorChain: Chain = {
  title: `${title}`,
  api: `${api}`,
  address: `${address}`,
};

// get functions (might need to add err catch in functions)
export async function getCurrentBlock(chain: Chain) {
  const response = await fetch(`${chain.api}/blocks/latest`).then((res) =>
    res.json()
  );
  return parseInt(response["block"]["header"]["height"]);
}

export async function getValidators(chain: Chain) {
  const response = await fetch(`${chain.api}/validatorsets/latest`).then(
    (res) => res.json()
  );
  return response;
}

async function getMoreValidators(chain: Chain) {
  const response = await fetch(`${chain.api}/validatorsets/latest?page=2`).then(
    (res) => res.json()
  );
  return response;
}

// Validator Info
const validatorHeight = await getCurrentBlock(validatorChain);
const validators = await getValidators(validatorChain);
var maxValidators = validators["result"]["total"];
var jackalRank;

// check if there is a page 2, then iterate accordingly
if (
  validators["result"]["total"] == validators["result"]["validators"].length
) {
  for (let i = 0; i < maxValidators; i++) {
    if (
      validators["result"]["validators"][i]["address"] == validatorChain.address
    ) {
      jackalRank = i + 1;
    }
  }
} else {
  const moreValidators = await getMoreValidators(validatorChain);
  for (let i = 0; i < moreValidators["result"]["validators"].length; i++) {
    if (
      moreValidators["result"]["validators"][i]["address"] ==
      validatorChain.address
    ) {
      jackalRank = validators["result"]["validators"].length + i + 1;
    }
  }
}
---

<div class="chain">
  <img src={`/images/${title}.png`} alt={`${title} Icon`} />
  <div class="chain-text">
    <h4>{title}</h4>
    <div class="rank">Rank: <b>{jackalRank}</b></div>
    <div class="max-validators">Number of Validators: <b>{maxValidators}</b></div>
    <div class="block-height">Current Block Height: <b>{validatorHeight}</b></div>
  </div>
</div>

<style>
  .chain {
    padding: 20px 20px;
    display: flex;
    flex-grow: 1;
    text-align: left;
    align-items: center;
    border-top: 1px solid #d3d3d3;
    border-right: 1px solid #d3d3d3;
    border-bottom: 1px solid #d3d3d3;
  }
  .chain-text {
    padding-left: 20px;
  }
  img {
    height: 100px;
    width: 100px;
  }
</style>
